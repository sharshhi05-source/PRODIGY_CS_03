import re
def assess_password_strength(password):
    length_ok = len(password) >= 8
    has_upper = bool(re.search(r'[A-Z]', password))
    has_lower = bool(re.search(r'[a-z]', password))
    has_digit = bool(re.search(r'\d', password))
    has_special = bool(re.search(r'[!@#$%^&*(),.?":{}|<>]', password))
    score = sum([length_ok, has_upper, has_lower, has_digit, has_special])
    if score == 5:
        strength = "Strong"
    elif score >= 3:
        strength = "Moderate"
    else:
        strength = "Weak"
    feedback = []
    if not length_ok:
        feedback.append("Use at least 8 characters.")
    if not has_upper:
        feedback.append("Include at least one uppercase letter.")
    if not has_lower:
        feedback.append("Include at least one lowercase letter.")
    if not has_digit:
        feedback.append("Include at least one number.")
    if not has_special:
        feedback.append("Include at least one special character (!@#$ etc.).")
    return {
        "strength": strength,
        "score": score,
        "feedback": feedback
    }
if __name__ == "__main__":
    user_input = input("Enter a password to check its strength: ")
    result = assess_password_strength(user_input)
    print(f"\nPassword Strength: {result['strength']}")
    if result['feedback']:
        print("Suggestions to improve:")
        for suggestion in result['feedback']:
            print(f"- {suggestion}")
